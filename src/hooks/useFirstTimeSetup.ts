import { useEffect, useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '@/contexts/AuthContext';
import { useSchool } from '@/contexts/SchoolContext';

/**
 * Hook para verificar se √© o primeiro acesso do usu√°rio e redirecionar
 * para a p√°gina de configura√ß√µes da escola se necess√°rio
 */
export function useFirstTimeSetup() {
  const { user } = useAuth();
  const { school, loading } = useSchool();
  const navigate = useNavigate();
  const location = useLocation();
  const [isChecking, setIsChecking] = useState(true);

  useEffect(() => {
    // N√£o faz nada se ainda estiver carregando ou se n√£o h√° usu√°rio
    if (loading || !user || !school) {
      return;
    }

    // N√£o redireciona se j√° estiver na p√°gina de configura√ß√µes
    if (location.pathname === '/school-settings') {
      setIsChecking(false);
      return;
    }

    // Verifica se √© diretor e se os dados b√°sicos da escola est√£o preenchidos
    const isDirector = user.user_metadata?.tipo_usuario === 'diretor';
    const hasBasicSchoolData = school.cnpj || school.telefone || school.cep;

    // Se √© diretor e n√£o tem dados b√°sicos da escola, redireciona para configura√ß√µes
    if (isDirector && !hasBasicSchoolData) {
      console.log('üîÑ Redirecionando para configura√ß√µes da escola (primeiro acesso)');
      navigate('/school-settings', { replace: true });
    }

    setIsChecking(false);
  }, [user, school, loading, location.pathname, navigate]);

  return {
    isChecking: loading || isChecking,
    needsSetup: user?.user_metadata?.tipo_usuario === 'diretor' && 
                school && 
                !(school.cnpj || school.telefone || school.cep)
  };
}